exr           :  KEYWORD:VAR INDENTIFIER EQ expr
              : compr-expr ((KEYWORD: AND | KEYWORD: OR) comp-expr)*

comp-expr     :NOT compr-expr
              :  arith-expr ((EE|LT|GT|LTE|GTE) arith-expr)*


artih-expr    :  term((PLUS|MINUS) term)*

term          : factor ((MUL|DIV) factor)*

factor        : (PLUS|MINUS) factor
              :power
 
power         : call (POW factor)*      

call          : atom(LPAREN (expr (COMMA expr)*)? RPAREN)?

atom          : INT|FLOAT|INDENTIFIER
              : LPAREN expr RPAREN
              : if-expr
              : for-expr
              : while-expr
              : func-def

if-expr       : KEYWORD:IF expr KEYWORD:THEN expr
                (KEYWORD:ELIF expr KEYWORD:THEN expr)*
                (KEYWORD:ELSE expr)?

for-expr      : KEYWORD:FOR INDENTIFIER EQ expr KEYWORD: TO expr
                (KEYWORD:STEP expr)? KEYWORD:THEN expr

while-expr    : KEYWORD:WHILE expr KEYWORD: THEN expr

func-def      : KEYWORD:FUN INDENTIFIER
                LPAREN (INDENTIFIER (COMMA INDENTIFIER)*)? RPAREN
                ARROW expr
